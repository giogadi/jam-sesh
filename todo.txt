* Figure out why rust/web servers are dying on the remote VM
* replace websocket library with something newer
* Put buttons and shit in the HTML, wtf dude?
* Populate scale dropdown from model
* Enable varying # of beats per loop
* Make BPM global.
* Add a flag to disable all networking (i.e., local client only)
* Sequencer
  * Enable changing transpose of sequencer (global)
  * Enable changing octave (local)
* Add more sounds
  * Bass
  * pads
  * knobs
  * polyphony
* Investigate latency between making a change on one and hearing it on the other
  maybe just an issue with having the app in a background tab?
* Improve UI
  - Label stuff, lol
* Use binary comms between clients and server
* Enable multiple "rooms".
* Room is persistent.
* If anything in room was edited while one user was away, returning user can listen to how the loop changed, fast-forwarded. Just play the loop nonstop and playback all the edits made during that time. COOL
* (Maybe) encourage that people "fight" over each of the dials/instruments. If two people try to use same dial, the play rock-paper-scissors (or something) for control.

Omfg. this must be THE PROJECT!!!